name: Process Files with AI

on:
  workflow_dispatch:
    inputs:
      repositories:
        description: 'Repositories to process (comma-separated)'
        required: true
      dry_run:
        description: 'Dry-Run'
        required: true
        default: 'false'
        type: boolean

jobs:
  process-files:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Workflow Repository
      uses: actions/checkout@v2
      with:
        path: workflow-repo
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install tiktoken

    - name: Process Repositories
      run: |
        repos="${{ github.event.inputs.repositories }}"
        dryRun="${{ github.event.inputs.dry_run }}"

        IFS=',' read -ra REPO_ARRAY <<< "$repos"

        # Configure Git
        git config --global user.email "actions@example.com"
        git config --global user.name "GitHub Actions"
          
        for repo in "${REPO_ARRAY[@]}"; do
          echo "Processing repository: $repo"
          python workflow-repo/createReadMe.py $repo $dryRun

          if [ "$dryRun" = "true" ]; then
            continue
          fi

          cd $repo

          # Create and switch to a new branch
          git checkout -b chore/ai-readme-generation

          # Add and commit changes
          git add README.md
          git diff-index --quiet HEAD || git commit -m "Update ReadMe with AI response"

          # Push changes to the repository
          git push https://x-access-token:${{ secrets.CI_PAT }}@github.com/achrainer1112/$repo.git HEAD:chore/ai-readme-generation --force

          # Return to the root directory for the next repository
          cd ..
        done
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.CI_PAT }}
      
    - name: Create Pull Requests
      if: success()
      run: |
        repos="${{ github.event.inputs.repositories }}"
        dryRun="${{ github.event.inputs.dry_run }}"

        if [ "$dryRun" = true ]; then
          echo "Dry Run: Skipping Pull Request creation"
        fi
          
        
        IFS=',' read -ra REPO_ARRAY <<< "$repos"
        for repo in "${REPO_ARRAY[@]}"; do
          if [ "$dryRun" = true ]; then
            continue
          fi
          
          echo "Processing repository: $repo"

          # Change directory to the cloned repository
          cd $repo

          # Get default branch
          default_branch=$(curl -s -H "Authorization: token ${{ secrets.CI_PAT }}" \
            https://api.github.com/repos/achrainer1112/$repo | jq -r .default_branch)

          if [ "$default_branch" == "null" ]; then
            echo "Could not retrieve default branch for $repo"
            continue
          fi

          # Check if a pull request already exists for the branch
          existing_pr=$(gh pr list --base $default_branch --head chore/ai-readme-generation --state open --json number -q '.[].number')

          if [ -n "$existing_pr" ]; then
            echo "A Pull Request already exists for branch 'chore/ai-readme-generation' in $repo"
          else
            # Create Pull Request
            gh pr create --base $default_branch --head chore/ai-readme-generation --title "Update ReadMe with AI response" --body "Automated update of README.md with AI response."
          fi

          # Return to the root directory for the next repository
          cd ..
        done
      env:
        GH_TOKEN: ${{ secrets.CI_PAT }}
